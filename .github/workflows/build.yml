name: Build Flutter Apps

on:
  push:
    branches:
      - main

jobs:
  setup:
    name: Setup Flutter & Dependencies
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Install dependencies
        run: flutter pub get

      - name: Extract version
        id: extract_version
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | awk '{print $2}')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Cache pub dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: ${{ runner.os }}-pub-${{ hashFiles('pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: Upload source & dependencies
        uses: actions/upload-artifact@v4
        with:
          name: source-with-deps
          path: |
            .
            !build/
            !.git/

  android:
    name: Build Android
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Download source with dependencies
        uses: actions/download-artifact@v4
        with:
          name: source-with-deps
          path: .

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build APK
        run: flutter build apk --release --dart-define=WEBHOOK_URL=${{ secrets.WEBHOOK_URL }}

      - name: Rename APK
        run: mv build/app/outputs/flutter-apk/app-release.apk knock_knock-${{ needs.setup.outputs.version }}.apk

      - name: Upload Android artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android
          path: knock_knock-${{ needs.setup.outputs.version }}.apk

  ios:
    name: Build iOS
    runs-on: macos-latest
    needs: setup
    steps:
      - name: Download source with dependencies
        uses: actions/download-artifact@v4
        with:
          name: source-with-deps
          path: .

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Build iOS
        run: flutter build ios --release --no-codesign --dart-define=WEBHOOK_URL=${{ secrets.WEBHOOK_URL }}

      - name: Package iOS app
        run: |
          cd build/ios/iphoneos
          zip -r ../../../knock_knock-${{ needs.setup.outputs.version }}-ios.zip *.app

      - name: Upload iOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios
          path: knock_knock-${{ needs.setup.outputs.version }}-ios.zip

  linux:
    name: Build Linux
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Download source with dependencies
        uses: actions/download-artifact@v4
        with:
          name: source-with-deps
          path: .

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            cmake \
            g++ \
            pkg-config \
            libgtk-3-dev \
            liblzma-dev \
            libgstreamer1.0-dev \
            libgstreamer-plugins-base1.0-dev \
            ninja-build

      - name: Build Linux
        run: flutter build linux --release --dart-define=WEBHOOK_URL=${{ secrets.WEBHOOK_URL }}

      - name: Package Linux app
        run: |
          cd build/linux/x64/release/bundle
          zip -r ../../../../../knock_knock-${{ needs.setup.outputs.version }}-linux.zip *

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: knock_knock-${{ needs.setup.outputs.version }}-linux.zip

  windows:
    name: Build Windows
    runs-on: windows-latest
    needs: setup
    steps:
      - name: Download source with dependencies
        uses: actions/download-artifact@v4
        with:
          name: source-with-deps
          path: .

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Build Windows
        run: flutter build windows --release --dart-define=WEBHOOK_URL=${{ secrets.WEBHOOK_URL }}

      - name: Package Windows app
        run: |
          cd build/windows/x64/runner/Release
          Compress-Archive -Path * -DestinationPath ../../../../../knock_knock-${{ needs.setup.outputs.version }}-windows.zip

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: knock_knock-${{ needs.setup.outputs.version }}-windows.zip
  web:
    name: Build Web
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Download source with dependencies
        uses: actions/download-artifact@v4
        with:
          name: source-with-deps
          path: .

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Build Web
        run: flutter build web --release --dart-define=WEBHOOK_URL=${{ secrets.WEBHOOK_URL }}

      - name: Upload Web artifact
        uses: actions/upload-artifact@v4
        with:
          name: web
          path: build/web
      - name: Deploy via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: build/web/
          server-dir: /


  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [setup, android, ios, linux, windows]
    if: success() && github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download Android artifacts
        uses: actions/download-artifact@v4
        with:
          name: android
          path: dist

      - name: Download iOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: ios
          path: dist

      - name: Download Linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: linux
          path: dist

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows
          path: dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.setup.outputs.version }}
          name: Knock Knock v${{ needs.setup.outputs.version }}
          draft: false
          prerelease: false
          files: dist/*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}